<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>